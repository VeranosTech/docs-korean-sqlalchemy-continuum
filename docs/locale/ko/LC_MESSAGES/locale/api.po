# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Konsta Vesterinen
# This file is distributed under the same license as the
# SQLAlchemy-Continuum package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SQLAlchemy-Continuum 1.3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-24 16:03+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../api.rst:2
msgid "API Documentation"
msgstr ""

#: of sqlalchemy_continuum.make_versioned:1
msgid ""
"This is the public API function of SQLAlchemy-Continuum for making "
"certain mappers and sessions versioned. By default this applies to all "
"mappers and all sessions."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager
#: sqlalchemy_continuum.VersioningManager.after_flush
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners
#: sqlalchemy_continuum.VersioningManager.before_flush
#: sqlalchemy_continuum.VersioningManager.clear
#: sqlalchemy_continuum.VersioningManager.is_excluded_property
#: sqlalchemy_continuum.VersioningManager.option
#: sqlalchemy_continuum.VersioningManager.positional_args_to_dict
#: sqlalchemy_continuum.VersioningManager.remove_class_configuration_listeners
#: sqlalchemy_continuum.VersioningManager.remove_operations_tracking
#: sqlalchemy_continuum.VersioningManager.remove_session_tracking
#: sqlalchemy_continuum.VersioningManager.track_operations
#: sqlalchemy_continuum.VersioningManager.track_session
#: sqlalchemy_continuum.VersioningManager.unit_of_work
#: sqlalchemy_continuum.make_versioned
#: sqlalchemy_continuum.model_builder.ModelBuilder.build_transaction_relationship
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.process_query
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.assign_attributes
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_association_versions
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_transaction
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_version_objects
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.get_or_create_version_object
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.is_modified
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.make_versions
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.process_after_flush
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.process_before_flush
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery
msgid "Parameters"
msgstr ""

#: of sqlalchemy_continuum.make_versioned:5
msgid "SQLAlchemy mapper to apply the versioning to."
msgstr ""

#: of sqlalchemy_continuum.make_versioned:7
msgid ""
"SQLAlchemy session to apply the versioning to. By default this is "
"sa.orm.session.Session meaning it applies to all Session subclasses."
msgstr ""

#: of sqlalchemy_continuum.make_versioned:10
msgid "SQLAlchemy-Continuum versioning manager."
msgstr ""

#: of sqlalchemy_continuum.make_versioned:12
msgid "Plugins to pass for versioning manager."
msgstr ""

#: of sqlalchemy_continuum.make_versioned:14
msgid "A dictionary of VersioningManager options."
msgstr ""

#: of sqlalchemy_continuum.make_versioned:16
msgid ""
"User class which the Transaction class should have relationship to. This "
"can either be a class or string name of a class for lazy evaluation."
msgstr ""

#: ../../api.rst:11
msgid "Versioning Manager"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:1
msgid ""
"VersioningManager delegates versioning configuration operations to "
"builder classes and the actual versioning to UnitOfWork class. Manager "
"contains configuration options that act as defaults for all versioned "
"classes."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:5
msgid ""
"The UnitOfWork class to use for initializing UnitOfWork objects for "
"versioning"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:8
msgid ""
"Transaction class to use for versioning. If None, the default Transaction"
" class generated by TransactionFactory will be used."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:11
msgid ""
"User class which Transaction class should have relationship to. This can "
"either be a class or string name of a class for lazy evaluation."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:14
msgid "Versioning options"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:16
msgid "Versioning plugins that listen the events invoked by the manager."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager:18
msgid "Builder object which handles the building of versioning tables and models."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.after_flush:1
msgid ""
"After flush listener for SQLAlchemy sessions. If this manager has "
"versioning enabled this listener gets the UnitOfWork associated with "
"session's connections and invokes the process_after_flush method of that "
"object."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.after_flush:6
#: sqlalchemy_continuum.VersioningManager.before_flush:5
msgid "SQLAlchemy session"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.append_association_operation:1
msgid "Append history association operation to pending_statements list."
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:1
msgid "Applies class configuration listeners for given mapper."
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:3
msgid "The listener work in two phases:"
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:7
msgid "Class instrumentation phase"
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:6
msgid ""
"The first listeners listens to class instrumentation event and handles "
"the collecting of versioned models and adds them to the pending_classes "
"list."
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:12
msgid "After class configuration phase"
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:10
msgid ""
"The second listener listens to after class configuration event and "
"handles the actual history model generation based on list that was "
"collected during class instrumenation phase."
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.apply_class_configuration_listeners:14
msgid "SQLAlchemy mapper to apply the class configuration listeners to"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.before_flush:1
msgid ""
"Before flush listener for SQLAlchemy sessions. If this manager has "
"versioning enabled this listener invokes the process before flush of "
"associated UnitOfWork object."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.clear:1
msgid ""
"Simple SQLAlchemy listener that is being invoked after successful "
"transaction commit or when transaction rollback occurs. The purpose of "
"this listener is to reset this UnitOfWork back to its initialization "
"state."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.clear:6
#: sqlalchemy_continuum.VersioningManager.unit_of_work:7
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_association_versions:3
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_transaction:3
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_version_objects:4
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.is_modified:6
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.make_versions:3
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.process_after_flush:6
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.process_before_flush:11
msgid "SQLAlchemy session object"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.create_transaction_model:1
msgid ""
"Create Transaction class but only if it doesn't already exist in "
"declarative model registry."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.is_excluded_property:1
msgid ""
"Returns whether or not given property of given model is excluded from the"
" associated history model."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.is_excluded_property:4
msgid "SQLAlchemy declarative model object."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.is_excluded_property:5
msgid "Model property key"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.option:1
msgid ""
"Returns the option value for given model. If the option is not found from"
" given model falls back to default values of this manager object. If the "
"option is not found from this manager object either this method throws a "
"KeyError."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.option:6
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:27
msgid "SQLAlchemy declarative object"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.option:7
msgid "name of the versioning option"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.positional_args_to_dict:1
msgid ""
"On some drivers (eg sqlite) generated INSERT statements use positional "
"args instead of key value dictionary. This method converts positional "
"args to key value dict."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.positional_args_to_dict:5
msgid "SQL statement string"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.positional_args_to_dict:6
msgid "tuple or dict of statement parameters"
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.remove_class_configuration_listeners:1
msgid "Remove versioning class configuration listeners from specified mapper."
msgstr ""

#: of
#: sqlalchemy_continuum.VersioningManager.remove_class_configuration_listeners:3
msgid "mapper to remove class configuration listeners from"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.remove_operations_tracking:1
msgid ""
"Remove listeners from specified mapper that track SQL inserts, updates "
"and deletes."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.remove_operations_tracking:4
msgid "mapper to remove the SQL operations tracking listeners from"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.remove_session_tracking:1
msgid ""
"Remove listeners that track the operations (flushing, committing and "
"rolling back) of given session. This method should be used in conjunction"
" with `remove_operations_tracking`."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.remove_session_tracking:5
msgid "SQLAlchemy session to remove the operations tracking from"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.reset:1
msgid "Resets this manager's internal state."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.reset:3
msgid ""
"This method should be used in test cases that create models on the fly. "
"Otherwise history_class_map and some other variables would be polluted by"
" no more used model classes."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_association_operations:1
msgid ""
"Track association operations and adds the generated history association "
"operations to pending_statements list."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_cloned_connections:1
msgid "Track cloned connections from association tables."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_deletes:1
msgid ""
"Track object deletion operations. Whenever object is deleted it is added "
"to this UnitOfWork's internal operations dictionary."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_inserts:1
msgid ""
"Track object insert operations. Whenever object is inserted it is added "
"to this UnitOfWork's internal operations dictionary."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_operations:1
msgid ""
"Attach listeners for specified mapper that track SQL inserts, updates and"
" deletes."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_operations:4
msgid "mapper to track the SQL operations from"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_session:1
msgid ""
"Attach listeners that track the operations (flushing, committing and "
"rolling back) of given session. This method should be used in conjunction"
" with `track_operations`."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_session:5
msgid "SQLAlchemy session to track the operations from"
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.track_updates:1
msgid ""
"Track object update operations. Whenever object is updated it is added to"
" this UnitOfWork's internal operations dictionary."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.unit_of_work:1
msgid ""
"Return the associated SQLAlchemy-Continuum UnitOfWork object for given "
"SQLAlchemy session object."
msgstr ""

#: of sqlalchemy_continuum.VersioningManager.unit_of_work:4
msgid ""
"If no UnitOfWork object exists for given object then this method tries to"
" create one."
msgstr ""

#: ../../api.rst:18
msgid "Builders"
msgstr ""

#: of sqlalchemy_continuum.table_builder.TableBuilder:1
msgid ""
"TableBuilder handles the building of version tables based on parent "
"table's structure and versioning configuration options."
msgstr ""

#: of sqlalchemy_continuum.table_builder.TableBuilder.table_name:1
msgid "Returns the version table name for current parent table."
msgstr ""

#: of sqlalchemy_continuum.model_builder.ModelBuilder:1
msgid ""
"VersionedModelBuilder handles the building of Version models based on "
"parent table attributes and versioning configuration."
msgstr ""

#: of sqlalchemy_continuum.model_builder.ModelBuilder.base_classes:1
msgid "Returns all base classes for history model."
msgstr ""

#: of sqlalchemy_continuum.model_builder.ModelBuilder.build_model:1
msgid "Build history model class."
msgstr ""

#: of
#: sqlalchemy_continuum.model_builder.ModelBuilder.build_parent_relationship:1
msgid ""
"Builds a relationship between currently built version class and parent "
"class (the model whose history the currently build version class "
"represents)."
msgstr ""

#: of
#: sqlalchemy_continuum.model_builder.ModelBuilder.build_transaction_relationship:1
msgid ""
"Builds a relationship between currently built version class and "
"Transaction class."
msgstr ""

#: of
#: sqlalchemy_continuum.model_builder.ModelBuilder.build_transaction_relationship:4
msgid "Transaction class"
msgstr ""

#: of sqlalchemy_continuum.model_builder.ModelBuilder.inheritance_args:1
msgid "Return mapper inheritance args for currently built history model."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:1
msgid ""
"Returns an EXISTS clause that checks if an association exists for given "
"SQLAlchemy declarative object. This query is used by "
"many_to_many_criteria method."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:5
msgid "Example query:"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:23
msgid "EXISTS ("
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:10
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:17
msgid ""
"SELECT 1 FROM article_tag_version WHERE article_id = 3 AND tag_id = "
"tags_version.id AND operation_type != 2 AND EXISTS ("
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:16
msgid ""
"SELECT 1 FROM article_tag_version as article_tag_version2 WHERE "
"article_tag_version2.tag_id = article_tag_version.tag_id AND "
"article_tag_version2.tx_id <=5 GROUP BY article_tag_version2.tag_id "
"HAVING"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:22
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:29
msgid "MAX(article_tag_version2.tx_id) = article_tag_version.tx_id"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:24
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.association_subquery:25
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:31
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:27
msgid ")"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.build_association_version_tables:1
msgid ""
"Builds many-to-many association version table for given property. "
"Association version tables are used for tracking change history of many-"
"to-many associations."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:1
msgid "Returns the many-to-many query."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:3
msgid ""
"Looks up remote items through associations and for each item returns "
"returns the last version with a transaction less than or equal to the "
"transaction of `obj`. This must hold true for both the association and "
"the remote relation items."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:10
msgid "Select all tags of article with id 3 and transaction 5"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:14
msgid "SELECT tags_version.* FROM tags_version WHERE EXISTS ("
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:23
msgid ""
"SELECT 1 FROM article_tag_version as article_tag_version2 WHERE "
"article_tag_version2.tag_id = article_tag_version.tag_id AND "
"article_tag_version2.tx_id <= 5 GROUP BY article_tag_version2.tag_id "
"HAVING"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:32
msgid ") AND EXISTS ("
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:34
msgid ""
"SELECT 1 FROM tags_version as tags_version_2 WHERE tags_version_2.id = "
"tags_version.id AND tags_version_2.tx_id <= 5 GROUP BY tags_version_2.id "
"HAVING MAX(tags_version_2.tx_id) = tags_version.tx_id"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_many_criteria:40
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_one_criteria:21
msgid ") AND operation_type != 2"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_one_criteria:1
msgid "Returns the many-to-one query."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_one_criteria:3
msgid ""
"Returns the item on the 'one' side with the highest transaction id as "
"long as it is less or equal to the transaction id of the `obj`."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_one_criteria:8
msgid "Look up the Article of a Tag with article_id = 4 and transaction_id = 5"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_one_criteria:13
msgid "SELECT * FROM articles_version WHERE id = 4 AND transaction_id = ("
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.many_to_one_criteria:17
msgid ""
"SELECT max(transaction_id) FROM articles_version WHERE transaction_id <= "
"5 AND id = 4"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:1
msgid "Returns the one-to-many query."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:3
msgid ""
"For each item on the 'many' side, returns its latest version as long as "
"the transaction of that version is less than equal of the transaction of "
"`obj`."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:9
msgid ""
"Using the Article-Tags relationship, where we look for tags of "
"article_version with id = 3 and transaction = 5 the sql produced is"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:14
msgid ""
"SELECT tags_version.* FROM tags_version WHERE tags_version.article_id = 3"
" AND tags_version.operation_type != 2 AND EXISTS ("
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:19
msgid ""
"SELECT 1 FROM tags_version as tags_version_last WHERE "
"tags_version_last.transaction_id <= 5 AND tags_version_last.id = "
"tags_version.id GROUP BY tags_version_last.id HAVING"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.one_to_many_criteria:25
msgid "MAX(tags_version_last.transaction_id) = tags_version.transaction_id"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.process_query:1
msgid ""
"Process given SQLAlchemy Query object depending on the associated "
"RelationshipProperty object."
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.process_query:4
msgid "SQLAlchemy Query object"
msgstr ""

#: of
#: sqlalchemy_continuum.relationship_builder.RelationshipBuilder.reflected_relationship:1
msgid ""
"Builds a reflected one-to-many, one-to-one and many-to-one relationship "
"between two version classes."
msgstr ""

#: ../../api.rst:35
msgid "UnitOfWork"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.assign_attributes:1
msgid "Assign attributes values from parent object to version object."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.assign_attributes:3
msgid "Parent object to get the attribute values from"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.assign_attributes:5
msgid "Version object to assign the attribute values to"
msgstr ""

#: of
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.create_association_versions:1
msgid "Creates association table version records for given session."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.create_transaction:1
msgid "Create transaction object for given SQLAlchemy session."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.create_version_objects:1
msgid ""
"Create version objects for given session based on operations collected by"
" insert, update and deleted trackers."
msgstr ""

#: of
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.get_or_create_version_object:1
msgid ""
"Return version object for given parent object. If no version object "
"exists for given parent object, create one."
msgstr ""

#: of
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.get_or_create_version_object:4
msgid "Parent object to create the version object for"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.has_changes:1
msgid "Return whether or not this unit of work has changes."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.is_modified:1
msgid ""
"Return whether or not given session has been modified. Session has been "
"modified if any versioned property of any version object in given session"
" has been modified or if any of the plugins returns that session has been"
" modified."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.make_versions:1
msgid "Create transaction, transaction changes records, version objects."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_after_flush:1
msgid "After flush processor for given session."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_after_flush:3
msgid ""
"Creates version objects for all modified versioned parent objects that "
"were affected during the flush phase."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_before_flush:1
msgid "Before flush processor for given session."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_before_flush:3
msgid ""
"This method creates a version session which is later on used for the "
"creation of version objects. It also creates Transaction object for the "
"current transaction and invokes before_flush template method on all "
"plugins."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_before_flush:8
msgid ""
"If the given session had no relevant modifications regarding versioned "
"objects this method does nothing."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:1
msgid "Process given operation object. The operation processing has x stages:"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:3
msgid "Get or create a version object for given parent object"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:4
msgid "Assign the operation type for this object"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:5
msgid "Invoke listeners"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:6
msgid "Update version validity in case validity strategy is used"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:7
msgid "Mark operation as processed"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.process_operation:9
msgid "Operation object"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.reset:1
msgid ""
"Reset the internal state of this UnitOfWork object. Normally this is "
"called after transaction has been committed or rolled back."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity:1
msgid ""
"Updates previous version object end_transaction_id based on given parent "
"object and newly created version object."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity:4
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery:3
msgid "This method is only used when using 'validity' versioning strategy."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity:6
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery:5
msgid "SQLAlchemy declarative parent object"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery
msgid "parem version_obj"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity:7
#: sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery:6
msgid "SQLAlchemy declarative version object"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.update_version_validity:9
msgid ":func:`version_validity_subquery`"
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery:1
msgid "Return the subquery needed by :func:`update_version_validity`."
msgstr ""

#: of sqlalchemy_continuum.unit_of_work.UnitOfWork.version_validity_subquery:8
msgid ":func:`update_version_validity`"
msgstr ""

#: ../../api.rst:43
msgid "History class"
msgstr ""

#: of sqlalchemy_continuum.version.VersionClassBase.changeset:1
msgid ""
"Return a dictionary of changed fields in this version with keys as field "
"names and values as lists with first value as the old field value and "
"second list value as the new value."
msgstr ""

#: of sqlalchemy_continuum.version.VersionClassBase.index:1
msgid "Return the index of this version in the version history."
msgstr ""

#: of sqlalchemy_continuum.version.VersionClassBase.next:1
msgid ""
"Returns the next version relative to this version in the version history."
" If current version is the last version this method returns None."
msgstr ""

#: of sqlalchemy_continuum.version.VersionClassBase.previous:1
msgid ""
"Returns the previous version relative to this version in the version "
"history. If current version is the first version this method returns "
"None."
msgstr ""

#: ../../../CHANGES.rst:2
msgid "Changelog"
msgstr ""

#: ../../../CHANGES.rst:4
msgid ""
"Here you can see the full list of changes between each SQLAlchemy-"
"Continuum release."
msgstr ""

#: ../../../CHANGES.rst:8
msgid "1.3.9 (2019-03-19)"
msgstr ""

#: ../../../CHANGES.rst:10
msgid "Added SA 1.3 support"
msgstr ""

#: ../../../CHANGES.rst:11
msgid "Reverted trigger creation from 1.3.7"
msgstr ""

#: ../../../CHANGES.rst:15
msgid "1.3.8 (2019-02-27)"
msgstr ""

#: ../../../CHANGES.rst:17
msgid "Fixed revert to ignore non-columns (#197, courtesy of mauler)"
msgstr ""

#: ../../../CHANGES.rst:21
msgid "1.3.7 (2019-01-13)"
msgstr ""

#: ../../../CHANGES.rst:23
msgid ""
"Fix trigger creation during alembic migrations (#209, courtesy of "
"lyndsysimon)"
msgstr ""

#: ../../../CHANGES.rst:27
msgid "1.3.6 (2018-07-30)"
msgstr ""

#: ../../../CHANGES.rst:29
msgid ""
"Fixed ResourceClosedErrors from connections leaking when using an "
"external transaction (#196, courtesy of vault)"
msgstr ""

#: ../../../CHANGES.rst:33
msgid "1.3.5 (2018-06-03)"
msgstr ""

#: ../../../CHANGES.rst:35
msgid "Track cloned connections (#167, courtesy of netcriptus)"
msgstr ""

#: ../../../CHANGES.rst:39
msgid "1.3.4 (2018-03-07)"
msgstr ""

#: ../../../CHANGES.rst:41
msgid ""
"Exclude many-to-many properties from versioning if they are added in "
"exclude parameter (#169, courtesy of fuhrysteve)"
msgstr ""

#: ../../../CHANGES.rst:45
msgid "1.3.3 (2017-11-05)"
msgstr ""

#: ../../../CHANGES.rst:47
msgid ""
"Fixed changeset when updating object in same transaction as inserting it "
"(#141, courtesy of oinopion)"
msgstr ""

#: ../../../CHANGES.rst:51
msgid "1.3.2 (2017-10-12)"
msgstr ""

#: ../../../CHANGES.rst:53
msgid "Fixed multiple schema handling (#132, courtesy of vault)"
msgstr ""

#: ../../../CHANGES.rst:57
msgid "1.3.1 (2017-06-28)"
msgstr ""

#: ../../../CHANGES.rst:59
msgid ""
"Fixed subclass retrieval for closest_matching_table (#163, courtesy of "
"debonzi)"
msgstr ""

#: ../../../CHANGES.rst:63
msgid "1.3.0 (2017-01-30)"
msgstr ""

#: ../../../CHANGES.rst:65
msgid "Dropped py2.6 support"
msgstr ""

#: ../../../CHANGES.rst:66
msgid "Fixed memory leaks with UnitOfWork instances (#131, courtesy of quantus)"
msgstr ""

#: ../../../CHANGES.rst:70
msgid "1.2.4 (2016-01-10)"
msgstr ""

#: ../../../CHANGES.rst:72
msgid "Added explicit sequence names for Oracle (#118, courtesy of apfeiffer1)"
msgstr ""

#: ../../../CHANGES.rst:76
msgid "1.2.3 (2016-01-10)"
msgstr ""

#: ../../../CHANGES.rst:78
msgid "Added use_module_name configuration option (#119, courtesy of kyheo)"
msgstr ""

#: ../../../CHANGES.rst:82
msgid "1.2.2 (2015-12-08)"
msgstr ""

#: ../../../CHANGES.rst:84
msgid ""
"Fixed some relationship changes not counted as modifications (#116, "
"courtesy of tvuotila)"
msgstr ""

#: ../../../CHANGES.rst:88
msgid "1.2.1 (2015-09-27)"
msgstr ""

#: ../../../CHANGES.rst:90
msgid ""
"Fixed deep joined table inheritance handling (#105, courtesy of piotr-"
"dobrogost)"
msgstr ""

#: ../../../CHANGES.rst:91
msgid ""
"Fixed naive assumption of related User model always having id column "
"(#107, courtesy of avilaton)"
msgstr ""

#: ../../../CHANGES.rst:92
msgid "Fixed one-to-many relationship reverting (#102, courtesy of sdorazio)"
msgstr ""

#: ../../../CHANGES.rst:96
msgid "1.2.0 (2015-07-31)"
msgstr ""

#: ../../../CHANGES.rst:98
msgid ""
"Removed generated changes attribute from version classes. This attribute "
"can be accessed through `transaction.changes`"
msgstr ""

#: ../../../CHANGES.rst:99
msgid "Removed is_modified checking from insert operations"
msgstr ""

#: ../../../CHANGES.rst:103
msgid "1.1.5 (2014-12-28)"
msgstr ""

#: ../../../CHANGES.rst:105
msgid ""
"Added smart primary key type inspection for user class (#86, courtesy of "
"mattupstate)"
msgstr ""

#: ../../../CHANGES.rst:106
msgid ""
"Added support for self-referential version relationship reflection (#88, "
"courtesy of dtheodor)"
msgstr ""

#: ../../../CHANGES.rst:110
msgid "1.1.4 (2014-12-06)"
msgstr ""

#: ../../../CHANGES.rst:112
msgid ""
"Fixed One-To-Many version relationship handling (#82, courtesy of "
"dtheodor)"
msgstr ""

#: ../../../CHANGES.rst:113
msgid ""
"Fixed Many-To-Many version relationship handling (#83, courtesy of "
"dtheodor)"
msgstr ""

#: ../../../CHANGES.rst:114
msgid "Fixed inclusion and exclusion of aliased columns"
msgstr ""

#: ../../../CHANGES.rst:115
msgid ""
"Removed automatic exclusion of auto-assigned datetime columns and "
"tsvector columns (explicit is better than implicit)"
msgstr ""

#: ../../../CHANGES.rst:119
msgid "1.1.3 (2014-10-23)"
msgstr ""

#: ../../../CHANGES.rst:121
msgid ""
"Made FlaskPlugin accepts overriding of current_user_id_factory and "
"remote_addr_factory"
msgstr ""

#: ../../../CHANGES.rst:125
msgid "1.1.2 (2014-10-07)"
msgstr ""

#: ../../../CHANGES.rst:127
msgid "Fixed identifier quoting in trigger syncing"
msgstr ""

#: ../../../CHANGES.rst:131
msgid "1.1.1 (2014-10-07)"
msgstr ""

#: ../../../CHANGES.rst:133
msgid "Fixed native versioning trigger syncing"
msgstr ""

#: ../../../CHANGES.rst:137
msgid "1.1.0 (2014-10-02)"
msgstr ""

#: ../../../CHANGES.rst:139
msgid "Added Python 3.4 to test suite"
msgstr ""

#: ../../../CHANGES.rst:140
msgid "Added optional native trigger based versioning for PostgreSQL dialect"
msgstr ""

#: ../../../CHANGES.rst:141
msgid "Added create_models option"
msgstr ""

#: ../../../CHANGES.rst:142
msgid "Added count_versions utility function"
msgstr ""

#: ../../../CHANGES.rst:143
msgid ""
"Fixed custom transaction column name handling with models using joined "
"table inheritance"
msgstr ""

#: ../../../CHANGES.rst:144
msgid "Fixed subquery strategy support for models using joined table inheritance"
msgstr ""

#: ../../../CHANGES.rst:145
msgid "Fixed savepoint handling"
msgstr ""

#: ../../../CHANGES.rst:146
msgid ""
"Fixed version model building when no versioned models were found "
"(previously threw AttributeError)"
msgstr ""

#: ../../../CHANGES.rst:147
msgid ""
"Replaced plugin template methods before_create_tx_object and "
"after_create_tx_object with transaction_args to better cope with native "
"versioning"
msgstr ""

#: ../../../CHANGES.rst:151
msgid "1.0.3 (2014-07-16)"
msgstr ""

#: ../../../CHANGES.rst:153
msgid "Added __repr__ for Operations class"
msgstr ""

#: ../../../CHANGES.rst:154
msgid ""
"Fixed an issue where assigning unmodified object's attributes in user "
"defined before flush listener would raise TypeError in UnitOfWork"
msgstr ""

#: ../../../CHANGES.rst:158
msgid "1.0.2 (2014-07-11)"
msgstr ""

#: ../../../CHANGES.rst:160
msgid "Allowed easier overriding of PropertyModTracker column creation"
msgstr ""

#: ../../../CHANGES.rst:161
msgid ""
"Rewrote join table inheritance handling schematics (now working with SA "
"0.9.6)"
msgstr ""

#: ../../../CHANGES.rst:162
msgid "SQLAlchemy-Utils dependency updated to 0.26.5"
msgstr ""

#: ../../../CHANGES.rst:166
msgid "1.0.1 (2014-06-18)"
msgstr ""

#: ../../../CHANGES.rst:168
msgid ""
"Fixed an issue where deleting an object with deferred columns would throw"
" ObjectDeletedError."
msgstr ""

#: ../../../CHANGES.rst:169
msgid ""
"Made viewonly relationships with association tables not register the "
"association table to versioning manager registry."
msgstr ""

#: ../../../CHANGES.rst:173
msgid "1.0 (2014-06-16)"
msgstr ""

#: ../../../CHANGES.rst:175
msgid "Added __repr__ for Transaction class, issue #59"
msgstr ""

#: ../../../CHANGES.rst:176
msgid "Made transaction_cls of VersioningManager configurable."
msgstr ""

#: ../../../CHANGES.rst:177
msgid "Removed generic relationships from transaction class to versioned classes."
msgstr ""

#: ../../../CHANGES.rst:178
msgid ""
"Removed generic relationships from transaction changes class to versioned"
" classes."
msgstr ""

#: ../../../CHANGES.rst:179
msgid "Removed relation_naming_function (no longer needed)"
msgstr ""

#: ../../../CHANGES.rst:180
msgid "Moved get_bind to SQLAlchemy-Utils"
msgstr ""

#: ../../../CHANGES.rst:181
msgid "Removed inflection package from dependencies (no longer needed)"
msgstr ""

#: ../../../CHANGES.rst:182
msgid "SQLAlchemy-Utils dependency updated to 0.26.2"
msgstr ""

#: ../../../CHANGES.rst:186
msgid "1.0b5 (2014-05-07)"
msgstr ""

#: ../../../CHANGES.rst:188
msgid ""
"Added order_by mapper arg ignoring for version class reflection if other "
"than string argument is used"
msgstr ""

#: ../../../CHANGES.rst:189
msgid ""
"Added support for customizing the User class which the Transaction class "
"should have relationship to (issue #53)"
msgstr ""

#: ../../../CHANGES.rst:190
msgid ""
"Changed get_versioning_manager to throw ClassNotVersioned exception if "
"first argument is not a versioned class"
msgstr ""

#: ../../../CHANGES.rst:191
msgid ""
"Fixed relationship reflection from versioned classes to non versioned "
"classes (issue #52)"
msgstr ""

#: ../../../CHANGES.rst:192
msgid "SQLAlchemy-Utils dependency updated to 0.25.4"
msgstr ""

#: ../../../CHANGES.rst:196
msgid "1.0-b4 (2014-04-20)"
msgstr ""

#: ../../../CHANGES.rst:198
msgid ""
"Fixed many-to-many unit of work inspection when using engine bind instead"
" of collection bind"
msgstr ""

#: ../../../CHANGES.rst:199
msgid ""
"Fixed various issues if primary key aliases were used in declarative "
"models"
msgstr ""

#: ../../../CHANGES.rst:200
msgid ""
"Fixed an issue where association versioning would not work with custom "
"transaction column name"
msgstr ""

#: ../../../CHANGES.rst:201
msgid "SQLAlchemy-Utils dependency updated to 0.25.3"
msgstr ""

#: ../../../CHANGES.rst:205
msgid "1.0-b3 (2014-04-19)"
msgstr ""

#: ../../../CHANGES.rst:207
msgid "Added support for concrete inheritance"
msgstr ""

#: ../../../CHANGES.rst:208
msgid "Added order_by mapper arg reflection to version classes"
msgstr ""

#: ../../../CHANGES.rst:209
msgid "Added support for column_prefix mapper arg"
msgstr ""

#: ../../../CHANGES.rst:210
msgid ""
"Made model builder copy inheritance mapper args to version classes from "
"parent classes"
msgstr ""

#: ../../../CHANGES.rst:211
msgid ""
"Fixed end transaction id setting for join table inheritance classes. Now "
"end transaction id is set explicitly to all tables in inheritance "
"hierarchy."
msgstr ""

#: ../../../CHANGES.rst:212
msgid "Fixed single table inheritance handling"
msgstr ""

#: ../../../CHANGES.rst:216
msgid "1.0-b2 (2014-04-09)"
msgstr ""

#: ../../../CHANGES.rst:218
msgid ""
"Added some schema tools to help migrating between different plugins and "
"versioning strategies"
msgstr ""

#: ../../../CHANGES.rst:219
msgid "Added remove_versioning utility function, see issue #45"
msgstr ""

#: ../../../CHANGES.rst:220
msgid "Added order_by transaction_id default to versions relationship"
msgstr ""

#: ../../../CHANGES.rst:221
msgid "Fixed PropertyModTrackerPlugin association table handling."
msgstr ""

#: ../../../CHANGES.rst:222
msgid "Fixed get_bind schematics (Flask-SQLAlchemy integration wasn't working)"
msgstr ""

#: ../../../CHANGES.rst:223
msgid ""
"Fixed a bug where committing a session without objects would result in "
"KeyError"
msgstr ""

#: ../../../CHANGES.rst:224
msgid "SQLAlchemy dependency updated to 0.9.4"
msgstr ""

#: ../../../CHANGES.rst:228
msgid "1.0-b1 (2014-03-14)"
msgstr ""

#: ../../../CHANGES.rst:230
msgid "Added new plugin architecture"
msgstr ""

#: ../../../CHANGES.rst:231
msgid "Added ActivityPlugin"
msgstr ""

#: ../../../CHANGES.rst:232
msgid ""
"Naming conventions change: History -> Version (to be consistent "
"throughout Continuum)"
msgstr ""

#: ../../../CHANGES.rst:233
msgid "Naming convention change: TransactionLog -> Transaction"
msgstr ""

#: ../../../CHANGES.rst:234
msgid ""
"Rewritten reflected relationship model for version classes. Only dynamic "
"relationships are now reflected as dynamic relationships. Other "
"relationships return either lists or scalars."
msgstr ""

#: ../../../CHANGES.rst:235
msgid "One-To-One relationship support for reflected version class relationships"
msgstr ""

#: ../../../CHANGES.rst:236
msgid ""
"Removed tx_context context manager. Transaction objects can now be "
"created manually and user has direct access to the parameters of this "
"object."
msgstr ""

#: ../../../CHANGES.rst:237
msgid ""
"Removed tx_meta context manager. Transaction meta objects can now be "
"created explicitly."
msgstr ""

#: ../../../CHANGES.rst:238
msgid "Fixed association reverting when the relationship uses uselist=False"
msgstr ""

#: ../../../CHANGES.rst:239
msgid ""
"Fixed one-to-many directed relationship reverting when the relationship "
"uses uselist=False"
msgstr ""

#: ../../../CHANGES.rst:240
msgid ""
"Fixed many-to-many relationship handling when multiple links were created"
" during the same transaction"
msgstr ""

#: ../../../CHANGES.rst:241
msgid ""
"Added indexes to operation_type, transaction_id and end_transaction_id "
"columns of version classes"
msgstr ""

#: ../../../CHANGES.rst:242
msgid "Deprecated extensions"
msgstr ""

#: ../../../CHANGES.rst:243
msgid "SQLAlchemy-Utils dependency updated to 0.25.0"
msgstr ""

#: ../../../CHANGES.rst:247
msgid "0.10.3 (2014-02-27)"
msgstr ""

#: ../../../CHANGES.rst:249
msgid "Fixed version next / previous handling"
msgstr ""

#: ../../../CHANGES.rst:250
msgid "SQLAlchemy dependency updated to 0.9.3"
msgstr ""

#: ../../../CHANGES.rst:251
msgid "Fixed column onupdate to history table reflection (issue #47)"
msgstr ""

#: ../../../CHANGES.rst:255
msgid "0.10.2 (2014-02-10)"
msgstr ""

#: ../../../CHANGES.rst:257
msgid "Fixed MySQL support (issue #36)"
msgstr ""

#: ../../../CHANGES.rst:258
msgid "Added SQLite and MySQL to testing matrix"
msgstr ""

#: ../../../CHANGES.rst:262
msgid "0.10.1 (2013-10-18)"
msgstr ""

#: ../../../CHANGES.rst:264
msgid "Added vacuum function"
msgstr ""

#: ../../../CHANGES.rst:268
msgid "0.10.0 (2013-10-09)"
msgstr ""

#: ../../../CHANGES.rst:270
msgid "Validity versioning strategy"
msgstr ""

#: ../../../CHANGES.rst:271
msgid "Changeset supports custom transaction column names"
msgstr ""

#: ../../../CHANGES.rst:272
msgid "Reify -> Revert"
msgstr ""

#: ../../../CHANGES.rst:273
msgid "Fixed revert to support class level column exclusion"
msgstr ""

#: ../../../CHANGES.rst:277
msgid "0.9.0 (2013-09-12)"
msgstr ""

#: ../../../CHANGES.rst:279
msgid "Ability to track property modifications"
msgstr ""

#: ../../../CHANGES.rst:280
msgid ""
"New configuration options: track_property_modifications and "
"modified_flag_suffix"
msgstr ""

#: ../../../CHANGES.rst:284
msgid "0.8.7 (2013-09-04)"
msgstr ""

#: ../../../CHANGES.rst:286
msgid ""
"Only autoincremented columns marked as autoincrement=False for history "
"tables. This enables alembic migrations to generate without annoying "
"explicit autoincrement=False args."
msgstr ""

#: ../../../CHANGES.rst:290
msgid "0.8.6 (2013-08-21)"
msgstr ""

#: ../../../CHANGES.rst:292
msgid "Custom database schema support added"
msgstr ""

#: ../../../CHANGES.rst:296
msgid "0.8.5 (2013-08-01)"
msgstr ""

#: ../../../CHANGES.rst:298
msgid ""
"TSVectorType columns not versioned by default (in order to avoid massive "
"version histories)"
msgstr ""

#: ../../../CHANGES.rst:302
msgid "0.8.4 (2013-07-31)"
msgstr ""

#: ../../../CHANGES.rst:304
msgid "Full MySQL and SQLite support added"
msgstr ""

#: ../../../CHANGES.rst:308
msgid "0.8.3 (2013-07-29)"
msgstr ""

#: ../../../CHANGES.rst:310
msgid ""
"Fixed UnitOfWork changed entities handling (now checks only for versioned"
" attributes not all object attributes)"
msgstr ""

#: ../../../CHANGES.rst:311
msgid ""
"Fixed UnitOfWork TransactionMeta object creation (now checks if actual "
"modifications were made)"
msgstr ""

#: ../../../CHANGES.rst:315
msgid "0.8.2 (2013-07-26)"
msgstr ""

#: ../../../CHANGES.rst:317
msgid ""
"Fixed MySQL history table primary key generation (autoincrement=False now"
" forced for transaction_id column)"
msgstr ""

#: ../../../CHANGES.rst:321
msgid "0.8.1 (2013-07-25)"
msgstr ""

#: ../../../CHANGES.rst:323
msgid "Added support for SQLAlchemy-i18n"
msgstr ""

#: ../../../CHANGES.rst:327
msgid "0.8.0 (2013-07-25)"
msgstr ""

#: ../../../CHANGES.rst:329
msgid ""
"Added database independent transaction meta parameter handling (formerly "
"supported postgres only)"
msgstr ""

#: ../../../CHANGES.rst:333
msgid "0.7.13 (2013-07-24)"
msgstr ""

#: ../../../CHANGES.rst:335
msgid ""
"Smarter is_modified handling for UnitOfWork (now understands excluded "
"properties)"
msgstr ""

#: ../../../CHANGES.rst:339
msgid "0.7.12 (2013-07-23)"
msgstr ""

#: ../../../CHANGES.rst:341
msgid ""
"Fixed FlaskVersioningManager schematics when working outside of request "
"context (again)"
msgstr ""

#: ../../../CHANGES.rst:342
msgid "Added possibility to use custom UnitOfWork class"
msgstr ""

#: ../../../CHANGES.rst:346
msgid "0.7.11 (2013-07-23)"
msgstr ""

#: ../../../CHANGES.rst:348
msgid ""
"Fixed FlaskVersioningManager schematics when working outside of request "
"context"
msgstr ""

#: ../../../CHANGES.rst:352
msgid "0.7.10 (2013-07-23)"
msgstr ""

#: ../../../CHANGES.rst:354
msgid "Fixed is_auto_assigned_date_column (again)"
msgstr ""

#: ../../../CHANGES.rst:355
msgid "Moved some core utility functions to SQLAlchemy-Utils"
msgstr ""

#: ../../../CHANGES.rst:359
msgid "0.7.9 (2013-07-23)"
msgstr ""

#: ../../../CHANGES.rst:361
msgid "Fixed is_auto_assigned_date_column"
msgstr ""

#: ../../../CHANGES.rst:362
msgid "Inflection added to requirements"
msgstr ""

#: ../../../CHANGES.rst:366
msgid "0.7.8 (2013-07-03)"
msgstr ""

#: ../../../CHANGES.rst:368
msgid ""
"Removed Versioned base class (adding __versioned__ attribute and calling "
"make_versioned() is sufficient for making declarative class versioned)"
msgstr ""

#: ../../../CHANGES.rst:372
msgid "0.7.7 (2013-07-03)"
msgstr ""

#: ../../../CHANGES.rst:374
msgid "DateTime columns with defaults excluded by default from history classes"
msgstr ""

#: ../../../CHANGES.rst:375
msgid "Column inclusion added as option"
msgstr ""

#: ../../../CHANGES.rst:379
msgid "0.7.6 (2013-07-03)"
msgstr ""

#: ../../../CHANGES.rst:381
msgid "Smarter changeset handling"
msgstr ""

#: ../../../CHANGES.rst:385
msgid "0.7.5 (2013-07-03)"
msgstr ""

#: ../../../CHANGES.rst:387
msgid "Improved reify() speed"
msgstr ""

#: ../../../CHANGES.rst:391
msgid "0.7.4 (2013-07-03)"
msgstr ""

#: ../../../CHANGES.rst:393
msgid "Fixed changeset when parent contains more columns than version class."
msgstr ""

#: ../../../CHANGES.rst:397
msgid "0.7.3 (2013-06-27)"
msgstr ""

#: ../../../CHANGES.rst:399
msgid ""
"Transaction log and transaction changes records only created if actual "
"net changes were made during transaction."
msgstr ""

#: ../../../CHANGES.rst:403
msgid "0.7.2 (2013-06-27)"
msgstr ""

#: ../../../CHANGES.rst:405
msgid "Removed last references for old revision versioning"
msgstr ""

#: ../../../CHANGES.rst:409
msgid "0.7.1 (2013-06-27)"
msgstr ""

#: ../../../CHANGES.rst:411
msgid "Added is_versioned utility function"
msgstr ""

#: ../../../CHANGES.rst:412
msgid "Fixed before operation listeners"
msgstr ""

#: ../../../CHANGES.rst:416
msgid "0.7.0 (2013-06-27)"
msgstr ""

#: ../../../CHANGES.rst:418
msgid "Version tables no longer have revision column"
msgstr ""

#: ../../../CHANGES.rst:419
msgid "Parent tables no longer need revision column"
msgstr ""

#: ../../../CHANGES.rst:420
msgid "Version tables primary key is now (parent table pks + transaction_id)"
msgstr ""

#: ../../../CHANGES.rst:424
msgid "0.6.8 (2013-06-26)"
msgstr ""

#: ../../../CHANGES.rst:426
msgid ""
"Make versioned join table inherited classes support multiple consecutive "
"flushes per transaction"
msgstr ""

#: ../../../CHANGES.rst:430
msgid "0.6.7 (2013-06-26)"
msgstr ""

#: ../../../CHANGES.rst:432
msgid "Fixed association versioning when using executemany"
msgstr ""

#: ../../../CHANGES.rst:436
msgid "0.6.6 (2013-06-26)"
msgstr ""

#: ../../../CHANGES.rst:438
msgid "Improved transaction log changed_entities schematics"
msgstr ""

#: ../../../CHANGES.rst:442
msgid "0.6.5 (2013-06-26)"
msgstr ""

#: ../../../CHANGES.rst:444
msgid "Added possibility to add lazy values in transaction context meta"
msgstr ""

#: ../../../CHANGES.rst:448
msgid "0.6.4 (2013-06-25)"
msgstr ""

#: ../../../CHANGES.rst:450
msgid ""
"Version tables no longer generated when versioning attribute of model set"
" to False"
msgstr ""

#: ../../../CHANGES.rst:454
msgid "0.6.3 (2013-06-25)"
msgstr ""

#: ../../../CHANGES.rst:456
msgid "Revision column not nullable in version classes"
msgstr ""

#: ../../../CHANGES.rst:460
msgid "0.6.2 (2013-06-25)"
msgstr ""

#: ../../../CHANGES.rst:462
msgid "Fixed relationship building for non-versioned classes"
msgstr ""

#: ../../../CHANGES.rst:466
msgid "0.6.1 (2013-06-25)"
msgstr ""

#: ../../../CHANGES.rst:468
msgid "Parent table primary keys remain not nullable in generated version table"
msgstr ""

#: ../../../CHANGES.rst:472
msgid "0.6.0 (2013-06-25)"
msgstr ""

#: ../../../CHANGES.rst:474
msgid ""
"Added database agnostic versioning (no need for PostgreSQL specific "
"triggers anymore)"
msgstr ""

#: ../../../CHANGES.rst:475
msgid ""
"Fixed version object relationships (never worked properly in previous "
"versions)"
msgstr ""

#: ../../../CHANGES.rst:476
msgid ""
"New configuration option versioning allows setting the versioning on and "
"off per child class."
msgstr ""

#: ../../../CHANGES.rst:477
msgid "Added column exclusion"
msgstr ""

#: ../../../CHANGES.rst:481
msgid "0.5.1 (2013-06-20)"
msgstr ""

#: ../../../CHANGES.rst:483
msgid ""
"Added improved context managing capabilities for transactions via "
"VersioningManager.tx_context"
msgstr ""

#: ../../../CHANGES.rst:487
msgid "0.5.0 (2013-06-20)"
msgstr ""

#: ../../../CHANGES.rst:489
msgid ""
"Removed Versioned base class, versioned objects only need to have "
"__versioned__ defined."
msgstr ""

#: ../../../CHANGES.rst:490
msgid "Session versioning now part of make_versioned function"
msgstr ""

#: ../../../CHANGES.rst:491
msgid "Added meta parameter in TransactionLog"
msgstr ""

#: ../../../CHANGES.rst:492
msgid ""
"TransactionChanges model for tracking changed entities in given "
"transaction"
msgstr ""

#: ../../../CHANGES.rst:493
msgid "Added Flask extension"
msgstr ""

#: ../../../CHANGES.rst:497
msgid "0.4.2 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:499
msgid "Alembic trigger syncing fixed for drop column and add column"
msgstr ""

#: ../../../CHANGES.rst:503
msgid "0.4.1 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:505
msgid "Alembic trigger syncing fixed"
msgstr ""

#: ../../../CHANGES.rst:509
msgid "0.4.0 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:511
msgid "Added support for multiple updates for same row within single transaction"
msgstr ""

#: ../../../CHANGES.rst:512
msgid "History tables have now own revision column"
msgstr ""

#: ../../../CHANGES.rst:516
msgid "0.3.12 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:518
msgid "Not null constraints removed from all reflected columns"
msgstr ""

#: ../../../CHANGES.rst:519
msgid "Fixed reify when parent has not null constraints"
msgstr ""

#: ../../../CHANGES.rst:520
msgid "Added support for reifying deletion"
msgstr ""

#: ../../../CHANGES.rst:524
msgid "0.3.11 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:526
msgid "Single table inheritance support added"
msgstr ""

#: ../../../CHANGES.rst:530
msgid "0.3.10 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:532
msgid "Generated operation_type column not nullable by default"
msgstr ""

#: ../../../CHANGES.rst:536
msgid "0.3.9 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:538
msgid "Added drop_table trigger synchronization"
msgstr ""

#: ../../../CHANGES.rst:542
msgid "0.3.8 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:544
msgid "Autoincrementation automatically removed from reflected primary keys"
msgstr ""

#: ../../../CHANGES.rst:548
msgid "0.3.7 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:550
msgid "Added identifier quoting for all column names"
msgstr ""

#: ../../../CHANGES.rst:554
msgid "0.3.6 (2013-06-18)"
msgstr ""

#: ../../../CHANGES.rst:556
msgid "Identifier quoting for create_trigger_sql"
msgstr ""

#: ../../../CHANGES.rst:560
msgid "0.3.5 (2013-06-12)"
msgstr ""

#: ../../../CHANGES.rst:562
msgid "Added alembic operations proxy class"
msgstr ""

#: ../../../CHANGES.rst:566
msgid "0.3.4 (2013-06-12)"
msgstr ""

#: ../../../CHANGES.rst:568
msgid "VersioningManager now added in __versioned__ dict of each versioned class"
msgstr ""

#: ../../../CHANGES.rst:572
msgid "0.3.3 (2013-06-12)"
msgstr ""

#: ../../../CHANGES.rst:574
msgid "Creating TransactionLog now checks if it already exists."
msgstr ""

#: ../../../CHANGES.rst:578
msgid "0.3.2 (2013-06-12)"
msgstr ""

#: ../../../CHANGES.rst:580
msgid "Added operation_type column to version tables."
msgstr ""

#: ../../../CHANGES.rst:584
msgid "0.3.1 (2013-06-12)"
msgstr ""

#: ../../../CHANGES.rst:586
msgid "Versioned mixin no longer holds lists of pending objects"
msgstr ""

#: ../../../CHANGES.rst:587
msgid "Added VersioningManager for more customizable versioning syntax"
msgstr ""

#: ../../../CHANGES.rst:591
msgid "0.3.0 (2013-06-10)"
msgstr ""

#: ../../../CHANGES.rst:593
msgid "Model changesets"
msgstr ""

#: ../../../CHANGES.rst:594
msgid "Fixed previous and next accessors"
msgstr ""

#: ../../../CHANGES.rst:595
msgid "Updates generate versions only if actual changes occur"
msgstr ""

#: ../../../CHANGES.rst:599
msgid "0.2.1 (2013-06-10)"
msgstr ""

#: ../../../CHANGES.rst:601
msgid "Added sanity check in all_affected_entities"
msgstr ""

#: ../../../CHANGES.rst:605
msgid "0.2.0 (2013-06-10)"
msgstr ""

#: ../../../CHANGES.rst:607
msgid "Added backref relations to TransactionLog"
msgstr ""

#: ../../../CHANGES.rst:608
msgid "Added all_affected_entities property to TransactionLog"
msgstr ""

#: ../../../CHANGES.rst:612
msgid "0.1.9 (2013-06-10)"
msgstr ""

#: ../../../CHANGES.rst:614
msgid ""
"Renamed internal attribute __pending__ to __pending_versioned__ in order "
"to avoid variable naming collisions."
msgstr ""

#: ../../../CHANGES.rst:618
msgid "0.1.8 (2013-06-10)"
msgstr ""

#: ../../../CHANGES.rst:620
msgid ""
"Better checking of model table name in scenarios where model does not "
"have __tablename__ defined."
msgstr ""

#: ../../../CHANGES.rst:624
msgid "0.1.7 (2013-06-07)"
msgstr ""

#: ../../../CHANGES.rst:626
msgid "Added make_versioned for more robust declaration of versioned mappers"
msgstr ""

#: ../../../CHANGES.rst:630
msgid "0.1.6 (2013-06-07)"
msgstr ""

#: ../../../CHANGES.rst:632
msgid "Added PostgreSQLAdapter class"
msgstr ""

#: ../../../CHANGES.rst:636
msgid "0.1.5 (2013-06-07)"
msgstr ""

#: ../../../CHANGES.rst:638
msgid "Made trigger procedures table specific to allow more fine-grained control."
msgstr ""

#: ../../../CHANGES.rst:642
msgid "0.1.4 (2013-06-06)"
msgstr ""

#: ../../../CHANGES.rst:644
msgid "Added column order inspection."
msgstr ""

#: ../../../CHANGES.rst:648
msgid "0.1.3 (2013-06-06)"
msgstr ""

#: ../../../CHANGES.rst:650
msgid "Removed foreign key dependency from version table and transaction table"
msgstr ""

#: ../../../CHANGES.rst:654
msgid "0.1.2 (2013-06-06)"
msgstr ""

#: ../../../CHANGES.rst:656
msgid "Fixed packaging"
msgstr ""

#: ../../../CHANGES.rst:660
msgid "0.1.1 (2013-06-06)"
msgstr ""

#: ../../../CHANGES.rst:662
msgid "Initial support for join table inheritance"
msgstr ""

#: ../../../CHANGES.rst:666
msgid "0.1.0 (2013-06-05)"
msgstr ""

#: ../../../CHANGES.rst:668
msgid "Initial release"
msgstr ""

